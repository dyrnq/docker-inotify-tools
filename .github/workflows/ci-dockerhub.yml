name: CI to Docker Hub
on:
  push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v4 # v4
    -
      name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Inspect builder
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

    - name: Build dockerfile (with no push)
      run: |
        docker buildx build \
        --platform linux/amd64,linux/arm64/v8,linux/arm/v7,linux/386,linux/arm/v6,linux/ppc64le,linux/riscv64,linux/s390x \
        --output "type=image,push=false" \
        --file ./Dockerfile . --tag ${{ secrets.DOCKER_USERNAME }}/inotify-tools:latest
    -
      name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build dockerfile (with push)
      run: |
        docker buildx build \
        --platform linux/amd64,linux/arm64/v8,linux/arm/v7,linux/386,linux/arm/v6,linux/ppc64le,linux/riscv64,linux/s390x \
        --output "type=image,push=true" \
        --file ./Dockerfile . --tag ${{ secrets.DOCKER_USERNAME }}/inotify-tools:latest
          

